# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=release
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),release)
  glfw_config = release
  glad_config = release
  parser_config = release
  renderer_config = release

else ifeq ($(config),debug)
  glfw_config = debug
  glad_config = debug
  parser_config = debug
  renderer_config = debug

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := glfw glad parser renderer

.PHONY: all clean help $(PROJECTS) dependencies

all: $(PROJECTS)

dependencies: glad glfw

glfw:
ifneq (,$(glfw_config))
	@echo "==== Building glfw ($(glfw_config)) ===="
	@${MAKE} --no-print-directory -C glfw -f Makefile config=$(glfw_config)
endif

glad:
ifneq (,$(glad_config))
	@echo "==== Building glad ($(glad_config)) ===="
	@${MAKE} --no-print-directory -C glad -f Makefile config=$(glad_config)
endif

parser:
ifneq (,$(parser_config))
	@echo "==== Building parser ($(parser_config)) ===="
	@${MAKE} --no-print-directory -C Parser -f Makefile config=$(parser_config)
endif

renderer:
ifneq (,$(renderer_config))
	@echo "==== Building renderer ($(renderer_config)) ===="
	@${MAKE} --no-print-directory -C GuiRenderer -f Makefile config=$(renderer_config)
endif

clean:
	@${MAKE} --no-print-directory -C glfw -f Makefile clean
	@${MAKE} --no-print-directory -C glad -f Makefile clean
	@${MAKE} --no-print-directory -C Parser -f Makefile clean
	@${MAKE} --no-print-directory -C GuiRenderer -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  release"
	@echo "  debug"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   glfw"
	@echo "   glad"
	@echo "   parser"
	@echo "   renderer"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"